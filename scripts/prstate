#!/usr/bin/python3
# SPDX-License-Identifier: Apache-2.0

import common

github = common.github()

def handle(issue, pr, responsible):
    assignees = {a.login for a in pr.assignees}

    remove = assignees - responsible
    needed = responsible - assignees

    repo = issue.repository
    print(f"{repo.organization.login}/{repo.name}#{pr.number}:", end='')
    for u in needed:
        print(f" +{u}", end='')
    for u in remove:
        print(f" -{u}", end='')
    print()

    if remove:
        pr.remove_from_assignees(*remove)
    if needed:
        pr.add_to_assignees(*needed)

# If there are any changes requested, the author is responsible.
for issue in github.search_issues(f"org:enarx is:pr is:public is:open -is:draft review:changes_requested"):
    pr = issue.as_pull_request()

    handle(issue, pr, {pr.user.login})

# Otherwise, requested reviewers and reviewers with dismissed reviews are.
# This handles both where the author requests re-review and where, after
# approvals, reviews were dismissed due to a new push.
for issue in github.search_issues(f"org:enarx is:pr is:public is:open -is:draft -review:changes_requested"):
    pr = issue.as_pull_request()

    dismissed = {r.user.login for r in pr.get_reviews() if r.state == 'DISMISSED'}
    requested = {r.login for r in pr.get_review_requests()[0]}

    handle(issue, pr, dismissed | requested)
